{
    "components": {
        "examples": {},
        "headers": {},
        "parameters": {},
        "requestBodies": {},
        "responses": {},
        "schemas": {
            "ReadonlyArray_RuralEventCategory_": {
                "properties": {},
                "type": "object",
                "additionalProperties": false
            },
            "CategoriesResponse": {
                "$ref": "#/components/schemas/ReadonlyArray_RuralEventCategory_"
            },
            "EventsResponse": {
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "Error": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "stack": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "message"
                ],
                "type": "object",
                "additionalProperties": false
            },
            "ReadonlyArray_SvfLanguage_": {
                "properties": {},
                "type": "object",
                "additionalProperties": false
            },
            "LanguagesResponse": {
                "$ref": "#/components/schemas/ReadonlyArray_SvfLanguage_"
            }
        },
        "securitySchemes": {}
    },
    "info": {
        "title": "events-api",
        "version": "0.1.0",
        "license": {
            "name": "MIT"
        },
        "contact": {
            "name": "Jan-Henrik Hempel",
            "email": "jan@schafe-vorm-fenster.de"
        }
    },
    "openapi": "3.0.0",
    "paths": {
        "/categories": {
            "get": {
                "operationId": "GetCategories",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoriesResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Returns a list of categories supported by the app incl. all locales.",
                "tags": [
                    "Constants"
                ],
                "security": [],
                "parameters": []
            }
        },
        "/events/{community}/{scope}/{category}": {
            "get": {
                "operationId": "GetEventsForCommunityFilteredByScopeAndCategory",
                "responses": {
                    "200": {
                        "description": "Okay",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventsResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Events"
                    },
                    "400": {
                        "description": "Invalid Parameters"
                    }
                },
                "description": "Returns a list of events for a given community.",
                "tags": [
                    "Events"
                ],
                "security": [],
                "parameters": [
                    {
                        "description": "Geonames.org id of the community, e.g. \"geoname-2838887\".",
                        "in": "path",
                        "name": "community",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Scope to filter events by, values see RuralEventScope. If no value is provided, all scopes are returned.",
                        "in": "path",
                        "name": "scope",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Category to filter events by, values see RuralEventCategory. If no value is provided, all categories are returned.",
                        "in": "path",
                        "name": "category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "days",
                        "required": false,
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    }
                ]
            }
        },
        "/events/{community}/{scope}": {
            "get": {
                "operationId": "GetEventsForCommunityFilteredByScope",
                "responses": {
                    "200": {
                        "description": "Okay",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventsResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Events"
                    },
                    "400": {
                        "description": "Invalid Parameters"
                    }
                },
                "description": "Returns a list of events for a given community.",
                "tags": [
                    "Events"
                ],
                "security": [],
                "parameters": [
                    {
                        "description": "Geonames.org id of the community, e.g. \"geoname-2838887\".",
                        "in": "path",
                        "name": "community",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Scope to filter events by, values see RuralEventScope. If no value is provided, all scopes are returned.",
                        "in": "path",
                        "name": "scope",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Number of days to look ahead for events. If no value is provided, 30 days will be used.",
                        "in": "query",
                        "name": "days",
                        "required": false,
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    }
                ]
            }
        },
        "/events/{community}": {
            "get": {
                "operationId": "GetEventsForCommunity",
                "responses": {
                    "200": {
                        "description": "Okay",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventsResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Events"
                    },
                    "400": {
                        "description": "Invalid Parameters"
                    }
                },
                "description": "Returns a list of events for a given community.",
                "tags": [
                    "Events"
                ],
                "security": [],
                "parameters": [
                    {
                        "description": "Geonames.org id of the community, e.g. \"geoname-2838887\".",
                        "in": "path",
                        "name": "community",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Number of days to look ahead for events. If no value is provided, 30 days will be used.",
                        "in": "query",
                        "name": "days",
                        "required": false,
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    }
                ]
            }
        },
        "/events/{id}": {
            "post": {
                "operationId": "CreateEvent",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Events"
                ],
                "security": [],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/languages": {
            "get": {
                "operationId": "GetLanguages",
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguagesResponse"
                                }
                            }
                        }
                    }
                },
                "description": "Returns a list of languages supported by the app incl. all locales.",
                "tags": [
                    "Constants"
                ],
                "security": [],
                "parameters": []
            }
        }
    },
    "servers": [
        {
            "url": "/"
        }
    ]
}
